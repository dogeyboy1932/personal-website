  <section class="space-y-10">
  <div class="text-center space-y-4" in:fade>
    <div
      class="inline-flex items-center space-x-2 rounded-full border border-slate-400/30 bg-slate-500/10 px-4 py-2 text-xs font-semibold uppercase tracking-[0.35em] text-slate-300"
    >
      <span>{projectShowcaseIntro.tagline}</span>
    </div>
    <h2 class="text-4xl font-semibold text-slate-900 text-slate-100">
      {projectShowcaseIntro.title}
    </h2>
    <p class="mx-auto max-w-2xl text-sm text-slate-600 text-slate-300">
      {projectShowcaseIntro.subtitle}
    </p>
  </div>

  <div class="flex flex-wrap justify-center gap-2" in:fade={{ delay: 120 }}>
    {#each projectShowcaseItems as project, index}
      <button
        on:click={() => (activeProject = index)}
        class={`rounded-lg border px-4 py-2 text-xs font-semibold uppercase tracking-[0.35em] transition ${
          activeProject === index
            ? "border-slate-500 bg-slate-500 text-black"
            : "border-slate-400/30 bg-white/10 text-slate-200 hover:border-slate-300/60"
        }`}
      >
        {project.title}
      </button>
    {/each}
  </div>

  <div class="relative overflow-hidden" in:fade>
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <!-- Left Card -->
      {#if activeProject > 0}
        <button
          on:click={() => (activeProject = activeProject - 1)}
          class="group relative overflow-hidden rounded-2xl border border-slate-500/20 bg-white/60 shadow-lg transition hover:-translate-y-1 hover:shadow-xl bg-slate-900/50 opacity-60 hover:opacity-80 cursor-pointer text-left"
        >
          <div class="relative h-48 overflow-hidden">
            <img
              src={projectShowcaseItems[activeProject - 1].image}
              alt={projectShowcaseItems[activeProject - 1].title}
              class="h-full w-full object-cover transition duration-500 group-hover:scale-105"
              loading="lazy"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-slate-950/70 via-transparent to-transparent" />
          </div>
          <div class="p-4">
            <h3 class="text-lg font-semibold text-slate-900 text-slate-100">
              {projectShowcaseItems[activeProject - 1].title}
            </h3>
            <p class="text-xs uppercase tracking-[0.35em] text-slate-500 mt-1">
              {projectShowcaseItems[activeProject - 1].category}
            </p>
          </div>
        </button>
      {:else}
        <div class="hidden md:block"></div>
      {/if}

      <!-- Center Card (Active) -->
      <div class="group relative overflow-hidden rounded-2xl border border-slate-500/20 bg-white/80 shadow-2xl transition hover:-translate-y-1 hover:shadow-2xl bg-slate-900/70">
        <div class="relative h-48 overflow-hidden">
          <img
            src={projectShowcaseItems[activeProject].image}
            alt={projectShowcaseItems[activeProject].title}
            class="h-full w-full object-cover transition duration-500 group-hover:scale-105"
            loading="lazy"
          />
          <div class="absolute inset-0 bg-gradient-to-t from-slate-950/70 via-transparent to-transparent" />
          <div class="absolute top-4 right-4">
            <span
              class={`rounded-full px-3 py-1 text-xs font-semibold uppercase tracking-[0.35em] border ${
                projectShowcaseItems[activeProject].status === "Production"
                  ? "border-slate-400 bg-slate-500/10 text-slate-200"
                  : "border-amber-400 bg-amber-500/10 text-amber-200"
              }`}
            >
              {projectShowcaseItems[activeProject].status}
            </span>
          </div>
          <div class="absolute top-4 left-4 flex gap-2 opacity-0 transition group-hover:opacity-100">
            {#if projectShowcaseItems[activeProject].demo}
              <button
                on:click={() => openLink(projectShowcaseItems[activeProject].demo)}
                class="rounded-lg border border-slate-400/40 bg-white/80 p-2 text-slate-400 hover:border-slate-300"
              >
                â†—
              </button>
            {/if}
            {#if projectShowcaseItems[activeProject].github}
              <button
                on:click={() => openLink(projectShowcaseItems[activeProject].github)}
                class="rounded-lg border border-slate-400/40 bg-white/80 p-2 text-slate-600 hover:border-slate-300"
              >
                GH
              </button>
            {/if}
          </div>
        </div>
        <div class="space-y-3 p-4">
          <div class="flex items-start justify-between gap-3">
            <div>
              <h3 class="text-lg font-semibold text-slate-900 transition group-hover:text-slate-300 text-slate-100">
                {projectShowcaseItems[activeProject].title}
              </h3>
              <p class="text-xs uppercase tracking-[0.35em] text-slate-500">
                {projectShowcaseItems[activeProject].category}
              </p>
            </div>
          </div>
          <p class="text-sm text-slate-600 text-slate-300">
            {projectShowcaseItems[activeProject].description}
          </p>
          <div class="flex flex-wrap gap-2">
            {#each projectShowcaseItems[activeProject].technologies.slice(0, 5) as tech}
              <span
                class={`rounded px-2 py-1 text-xs font-semibold uppercase tracking-[0.35em] border border-slate-400/30 bg-slate-500/10 ${getTechColor(tech)}`}
              >
                {tech}
              </span>
            {/each}
            {#if projectShowcaseItems[activeProject].technologies.length > 5}
              <span class="rounded px-2 py-1 text-xs font-semibold uppercase tracking-[0.35em] border border-slate-400/30 bg-slate-500/10 text-slate-200">
                +{projectShowcaseItems[activeProject].technologies.length - 5}
              </span>
            {/if}
          </div>
        </div>
      </div>

      <!-- Right Card -->
      {#if activeProject < projectShowcaseItems.length - 1}
        <button
          on:click={() => (activeProject = activeProject + 1)}
          class="group relative overflow-hidden rounded-2xl border border-slate-500/20 bg-white/60 shadow-lg transition hover:-translate-y-1 hover:shadow-xl bg-slate-900/50 opacity-60 hover:opacity-80 cursor-pointer text-left"
        >
          <div class="relative h-48 overflow-hidden">
            <img
              src={projectShowcaseItems[activeProject + 1].image}
              alt={projectShowcaseItems[activeProject + 1].title}
              class="h-full w-full object-cover transition duration-500 group-hover:scale-105"
              loading="lazy"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-slate-950/70 via-transparent to-transparent" />
          </div>
          <div class="p-4">
            <h3 class="text-lg font-semibold text-slate-900 text-slate-100">
              {projectShowcaseItems[activeProject + 1].title}
            </h3>
            <p class="text-xs uppercase tracking-[0.35em] text-slate-500 mt-1">
              {projectShowcaseItems[activeProject + 1].category}
            </p>
          </div>
        </button>
      {:else}
        <div class="hidden md:block"></div>
      {/if}
    </div>
  </div>

  <div class="flex justify-center space-x-2" in:fade={{ delay: 60 }}>
    {#each projectShowcaseItems as _, index}
      <button
        on:click={() => (activeProject = index)}
        class={`h-2.5 w-2.5 rounded-full transition ${
          activeProject === index
            ? "bg-slate-400 scale-110"
            : "bg-slate-400/40 hover:bg-slate-400/60"
        }`}
      />
    {/each}
  </div>

  <div class="text-center" in:fade={{ delay: 80 }}>
    <Button
      variant="outline"
      on:click={() =>
        typeof window !== "undefined"
          ? (window.location.hash = "#gallery")
          : null}
      class="border-slate-400/60 text-slate-200 hover:border-slate-300 hover:text-slate-100"
    >
      {labels.viewAllProjects ?? "View all projects"}
    </Button>
  </div>
</section>